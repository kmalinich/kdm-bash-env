#!/usr/bin/env bash

PKG_MANAGER="yarn"

cd "${HOME}/.config/coc/extensions" || exit 1


if ! hash ncu > /dev/null 2>&1; then
	echo "Command unavailable : 'ncu', cannot continue"
	exit 2
fi

if ! hash npm > /dev/null 2>&1; then
	echo "Command unavailable : 'npm', cannot continue"
	exit 3
fi

if ! hash "${PKG_MANAGER}" > /dev/null 2>&1; then
	echo "Command unavailable : '${PKG_MANAGER}', cannot continue"
	exit 4
fi

if ! hash jq > /dev/null 2>&1; then
	echo "Command unavailable : 'jq', cannot continue"
	exit 5
fi


echo "Checking for updates"
if ncu --errorLevel 2 --loglevel silent --packageManager "${PKG_MANAGER}" --upgrade; then
	echo "No update needed"
fi

#echo "Cleaning up old modules"
#rm -rf ./node_modules/ ./package-lock.json ./yarn.lock

echo "Formatting/sorting package.json"
FILE_TEMP="$(mktemp)"
jq -S --tab . ./package.json > "${FILE_TEMP}"
mv --force --verbose "${FILE_TEMP}" ./package.json

echo "Executing '${PKG_MANAGER} install' in ~/.config/coc/extensions"
# npm install --quiet --no-audit --no-fund --ignore-engines --legacy-bundling
yarn install --ignore-engines --network-concurrency 8 --non-interactive
echo; echo

cd "${HOME}/.config/coc/extensions/node_modules/coc-yaml" || exit 6
echo "Executing 'yarn install' in ~/.config/coc/extensions/node_modules/coc-yaml"
rm -f ./package-lock.json > /dev/null 2>&1
yarn install --ignore-scripts --ignore-engines --network-concurrency "$(nproc)" --non-interactive
echo; echo

cd "${HOME}/.vim/pack/kdm/coc.nvim" || exit 7
echo "Executing 'yarn install' in ~/.vim/pack/kdm/coc.nvim"
rm -f ./package-lock.json > /dev/null 2>&1
yarn install --frozen-lockfile --network-concurrency "$(nproc)" --non-interactive
echo; echo

cd || exit 8
echo "Performing nvim CocUpdateSync"
nvim -c 'CocUpdateSync|q'
