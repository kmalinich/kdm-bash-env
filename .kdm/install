#!/usr/bin/env bash

if [[ "${PWD}" != "${HOME}/kdm-bash-env" ]]; then
	echo "Please follow the install instructions at https://github.com/kmalinich/kdm-bash-env"
	echo "The Git repo was not cloned under your home directory (the repo's full path should be '${HOME}/kdm-bash-env')"
	exit 1
fi

echo "This will overwrite any identially named files/paths in your home directory."
echo "It will also erase any current bash history entries."
echo
echo "Git repo directory listing:"

echo
ls -lha
echo

read -p "Install? Enter Y/N: " INSTALL_YN

if [[ "${INSTALL_YN}" != [Yy] ]]; then
	echo "Not installing"
	exit 2
fi

# Unalias the following commands to prevent conflicts
ARRAY_UNALIAS=(
grep
ls
mkdir
mv
rm
)

for CMD in ${ARRAY_UNALIAS[@]}; do
	unalias ${CMD} > /dev/null 2>&1
done

# Format the output of md5sum command
md5_clean() {
	! hash md5sum > /dev/null && echo "ERROR : md5sum not available, cannot continue" && exit 1
	md5sum "${1}" | awk '{print $1}'
}

# Do md5sum on two files and compare them
md5_compare() {
	[[ $(md5_clean "${1}") == $(md5_clean "${2}") ]] && return 0 || return 1
}

echo "Moving 'htoprc'"
mkdir -p ${HOME}/.config/htop
rm -f {HOME}/.config/htop/htoprc
mv .config/htop/htoprc ${HOME}/.config/htop/
rm -rf .config

echo "Moving '.snmp/mibs'"
mkdir -p ${HOME}/.snmp/mibs
for MIB in $(ls -1A .snmp/mibs); do
	rm -rf ${HOME}/.snmp/mibs/${MIB}
	mv .snmp/mibs/${MIB} ${HOME}/.snmp/mibs/
done
rm -rf .snmp

echo "Moving '.nmap'"
mkdir -p ${HOME}/.nmap
for NSE in $(ls -1A .nmap); do
	rm -rf ${HOME}/.nmap/${NSE}
	mv .nmap/${NSE} ${HOME}/.nmap/
done
rm -rf .nmap

echo "Moving '.vim/bundle'"
mkdir -p ${HOME}/.vim/bundle
for BUNDLE in $(ls -1A .vim/bundle); do
	rm -rf ${HOME}/.vim/bundle/${BUNDLE}
	mv .vim/bundle/${BUNDLE} ${HOME}/.vim/bundle/
done
rm -rf .vim

DIR=".kdm/extra"
echo "Moving '${DIR}'"
mkdir -p ${HOME}/${DIR}
for FILE in $(ls -1A ${DIR}); do
	FILE_REPO="${DIR}/${FILE}"
	FILE_HOME="${HOME}/${FILE_REPO}"

	# Does it already exist in the home directory?
	if [[ -s ${FILE_HOME} ]]; then
		if ! md5_compare ${FILE_REPO} ${FILE_HOME}; then
			rm -rf ${FILE_HOME}
			mv ${FILE_REPO} ${FILE_HOME}
		fi
	fi
done
unset FILE
unset FILE_REPO
unset FILE_HOME

mkdir -p ${HOME}/.kdm/toprc
for TOPRC in $(ls -1A .kdm/toprc); do
	rm -rf ${HOME}/.kdm/toprc/${TOPRC}
	mv .kdm/toprc/${TOPRC} ${HOME}/.kdm/toprc/
done

rm -rf ${HOME}/.kdm/install
mv .kdm/install ${HOME}/.kdm/install
rm -rf ${HOME}/.kdm/bash-env-colors
mv .kdm/install ${HOME}/.kdm/bash-env-colors
rm -rf .kdm

# Move the rest of the files
for FILE in $(ls -1A); do
	echo "Moving '${FILE}'"
	rm -rf ${HOME}/${FILE}
	mv ${FILE} ${HOME}/
done

cd ${HOME}
rm -rf kdm-bash-env
git submodule update --init

echo "Install complete"
exit 0
