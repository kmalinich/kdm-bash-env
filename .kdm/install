#!/usr/bin/env bash

REPO_NAME="kdm-bash-env"

if [[ "${PWD}" != "${HOME}/${REPO_NAME}" ]]; then
	echo "Please follow the install instructions at https://github.com/kmalinich/${REPO_NAME}"
	echo "The Git repo was not cloned under your home directory (the repo's full path should be '${HOME}/${REPO_NAME}')"
	exit 1
fi

echo "This will overwrite any identially named files/paths in your home directory."
echo "It will also erase any current bash history entries."
echo
echo "Git repo directory listing:"

echo
ls -lha
echo

read -r -p "Install? Enter Y/N: " INSTALL_YN

if [[ "${INSTALL_YN}" != [Yy] ]]; then
	echo "Not installing"
	exit 2
fi

# Unalias the following commands to prevent conflicts
ARRAY_UNALIAS=(
grep
ls
mkdir
mv
rm
)

for CMD in "${ARRAY_UNALIAS[@]}"; do
	unalias "${CMD}" > /dev/null 2>&1
done


# Format the output of md5sum command
md5_clean() {
	! hash md5sum > /dev/null && echo "ERROR : md5sum not available, cannot continue" && exit 1
	md5sum "${1}" | awk '{print $1}'
}

# Do md5sum on two files and compare them
md5_compare() {
	[[ $(md5_clean "${1}") == $(md5_clean "${2}") ]] && return 0 || return 1
}


echo -e "\\nMoving 'htoprc'"
mkdir -p "${HOME}/.config/htop"
rm -f "${HOME}/.config/htop/htoprc"
mv .config/htop/htoprc "${HOME}/.config/htop/"
rm -rf .config


# Move a few dirs with lots of files in them
ARRAY_DIRS_MOVE=(
.kdm/rc.d
.kdm/profile.d
.kdm/nloadrc
.kdm/toprc
.vim/pack
)

for DIR in "${ARRAY_DIRS_MOVE[@]}"; do
	echo "Moving '${DIR}'"

	mkdir -p "${HOME}/${DIR}"

	for FILE in $(ls -1A "${DIR}"); do
		rm -rf "${HOME}/${DIR}/${FILE:?}"
		mv "${DIR}/${FILE}" "${HOME}/${DIR}/"
	done
done

rm -rf "${ARRAY_DIRS_MOVE[@]}"

# Check/move/update contents of .kdm/extra/
DIR=".kdm/extra"
echo "Moving '${DIR}'"
mkdir -p "${HOME}/${DIR}"

rm -f "${HOME}/${DIR}/README"
mv "${DIR}/README" "${HOME}/${DIR}/README"

for FILE in $(ls -1A "${DIR}"); do
	FILE_REPO="${DIR}/${FILE}"
	FILE_HOME="${HOME}/${FILE_REPO}"

	# Does it already exist in the home directory?
	if [[ -s ${FILE_HOME} ]]; then
		if ! md5_compare "${FILE_REPO}" "${FILE_HOME}"; then
			rm -rf "${FILE_HOME}"
			mv "${FILE_REPO}" "${FILE_HOME}"
		fi
	fi
done
unset FILE
unset FILE_REPO
unset FILE_HOME


# Move scripts in .kdm/ dir
ARRAY_KDM_SCRIPTS=(install)
DIR=".kdm"
echo "Moving '${DIR}/*'"
for KDM_SCRIPT in "${ARRAY_KDM_SCRIPTS[@]}"; do
	rm -f "${HOME}/${DIR}/${KDM_SCRIPT}"
	mv "${DIR}/${KDM_SCRIPT}" "${HOME}/${DIR}/${KDM_SCRIPT}"
done
rm -rf ${DIR}

# Move the rest of the files
for FILE in $(ls -1A); do
	echo "Moving '${FILE}'"
	rm -rf "${HOME}/${FILE:?}"
	mv "${FILE}" "${HOME}/"
done

cd "${HOME}" || return 1

# Git reset hard just in case
git reset --hard HEAD &> /dev/null
rm -rf "${REPO_NAME}"

echo -e "\\nPopulating submodules\\n"
git submodule update --init

echo -e "\\nInstall complete"

exit 0
