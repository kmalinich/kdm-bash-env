# Functions: Fix

[[ "${_}" != "${0}" && "${SOURCE_VERBOSE}" == "true" ]] && output kv "Loaded" "${BASH_SOURCE[@]/$HOME\/\.kdm\//}"


# Remove / clean macOS .DS_Store / attribute files
_fix_macos_files() {
	# Declare vars as local
	local ARRAY_RM_FILES OLD_IFS

	output purple "Finding all macOS metadata files under '${PWD}'"

	# Backup current IFS, change IFS to \n\b so as to parse file array
	OLD_IFS="${IFS}"
	IFS=$(echo -en "\\n\\b")

	# File array of macOS-specific junk files
	mapfile -t ARRAY_RM_FILES < <(find . -iname '*DS_Store' -o -iname '._*' 2> /dev/null)

	# Restore previous IFS
	IFS="${OLD_IFS}"

	[[ -z "${ARRAY_RM_FILES[0]}" ]] && output green "No macOS attribute/Finder files under '${PWD}' to remove" && return

	output yellow "Removing these (${#ARRAY_RM_FILES}) macOS attribute/Finder files under '${PWD}':"
	echo

	for RM_FILE in "${ARRAY_RM_FILES[@]}"; do
		output yellow "${RM_FILE}"
	done
	echo

	read -r -p "Are you sure you want to remove these files? [Y/n] " FIX_MACOS_FILES_YN
	echo
	[[ "${FIX_MACOS_FILES_YN}" == [Nn] ]] && output green "No macOS attribute/Finder files under '${PWD}' removed" && return

	for RM_FILE in "${ARRAY_RM_FILES[@]}"; do
		output yellow "Removing '${RM_FILE}'"
		rm -f "${RM_FILE}"
	done
	echo

	output green "All macOS attribute/Finder files under '${PWD}' removed"
}


# Function aliases
alias fix-macos-files='_fix_macos_files'


# vim: set filetype=sh ts=2 sw=2 tw=0 noet :
