# kdm bash-env
# .bash_profile


# Test for interactivity
[[ "${-}" == *"i"* ]] && export BASH_INTERACTIVE="true"

# Disable echo output
[[ "${BASH_INTERACTIVE}" ]] && stty -echo

# kdm bash-env variables
export BASH_ENV_DIR_KDM="${HOME}/.kdm"
export BASH_ENV_DIR_PROFILE_D="${BASH_ENV_DIR_KDM}/profile.d"
export BASH_ENV_FILE_INITIAL_PATH="${BASH_ENV_DIR_KDM}/initial-path"


_initialPathGenerate() {
	PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

	# Add GNU coreutils, findutils, and grep to PATH if macOS brew-installed package present
	ARRAY_DIR_GNU_UTILS=(
	"/usr/local/opt/coreutils/libexec/gnubin"
	"/usr/local/opt/findutils/libexec/gnubin"
	"/usr/local/opt/grep/libexec/gnubin"
	)

	for DIR_GNU_UTIL in "${ARRAY_DIR_GNU_UTILS[@]}"; do
		[[ ! -d "${DIR_GNU_UTIL}" ]] && continue
		PATH="${DIR_GNU_UTIL}:${PATH}"
	done

	echo "export PATH=\"${PATH}\"" > "${BASH_ENV_FILE_INITIAL_PATH}"

	export PATH
}

_initialPathSetup() {
	# Generate initial path file if empty
	if [[ ! -s "${BASH_ENV_FILE_INITIAL_PATH}" ]]; then
		_initialPathGenerate
		# If generation required, we're done here
		return 0
	fi

	# Source initial path file
	# shellcheck source=/dev/null
	. "${BASH_ENV_FILE_INITIAL_PATH}"
}


_initialPathSetup


# Initial plaintext loading message
# [[ "${BASH_INTERACTIVE}" && -t 0 ]] && echo -en "\\nLoading...\\r"

# Source data from ~/.kdm/profile.d
for FILE in $(find "${BASH_ENV_DIR_PROFILE_D}" -maxdepth 1 -name '[0-9][0-9]-*' -type f | sort); do
	. "${FILE}"

	# For performance debugging
	# echo -n "${FILE},"
	# export TIMEFORMAT=$'%3R'
	# time . "${FILE}"
	# export TIMEFORMAT=$'%3R'
done; unset FILE

if [[ "${BASH_INTERACTIVE}" ]]; then
	# _show_motd

	# Re-enable echo output
	stty echo

	# [[ -t 0 ]] && echo -en "          \\r"
fi


# vim: set filetype=sh ts=2 sw=2 tw=0 noet :
