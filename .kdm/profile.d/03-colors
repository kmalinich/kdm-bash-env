# kdm bash-env
# .kdm/bash-env-colors


#### Color variables ==start ####

# Output styles
C_RST="\\e[0m"
C_BLD="\\e[1m"
C_DRK="\\e[2m"
C_FLS="\\e[5m"
C_INV="\\e[7m"
C_ITA="\\e[3m"
C_UDL="\\e[4m"


# Normal
C_BLK="${C_RST}\\e[38;2;48;48;48m"
C_BLU="${C_RST}\\e[38;2;51;152;219m"
C_CYN="${C_RST}\\e[38;2;0;200;200m"
C_GRN="${C_RST}\\e[38;2;47;223;100m"
C_GRY="${C_RST}\\e[38;2;144;144;144m"
C_ORN="${C_RST}\\e[38;2;255;153;50m"
C_PNK="${C_RST}\\e[38;2;178;0;140m"
C_PRP="${C_RST}\\e[38;2;114;83;178m"
C_RED="${C_RST}\\e[38;2;231;76;60m"
C_WHT="${C_RST}\\e[38;2;224;224;224m"
C_YLW="${C_RST}\\e[38;2;255;204;50m"

# Bright
C_BLK_BRT="${C_RST}\\e[38;2;24;24;24m"
C_BLU_BRT="${C_RST}\\e[38;2;0;128;255m"
C_CYN_BRT="${C_RST}\\e[38;2;0;255;255m"
C_GRN_BRT="${C_RST}\\e[38;2;0;255;0m"
C_GRY_BRT="${C_RST}\\e[38;2;192;192;192m"
C_ORN_BRT="${C_RST}\\e[38;2;255;128;0m"
C_PNK_BRT="${C_RST}\\e[38;2;255;0;224m"
C_PRP_BRT="${C_RST}\\e[38;2;123;70;232m"
C_RED_BRT="${C_RST}\\e[38;2;255;0;0m"
C_WHT_BRT="${C_RST}\\e[38;2;255;255;255m"
C_YLW_BRT="${C_RST}\\e[38;2;255;255;0m"

# Code (backtick) colors
C_CODE="${C_RST}\\e[48;2;247;247;249;38;2;205;38;89m"


# Normal+Bold
C_BLK_BLD="${C_BLK}${C_BLD}"
C_BLU_BLD="${C_BLU}${C_BLD}"
C_CYN_BLD="${C_CYN}${C_BLD}"
C_GRN_BLD="${C_GRN}${C_BLD}"
C_GRY_BLD="${C_GRY}${C_BLD}"
C_ORN_BLD="${C_ORN}${C_BLD}"
C_PNK_BLD="${C_PNK}${C_BLD}"
C_PRP_BLD="${C_PRP}${C_BLD}"
C_RED_BLD="${C_RED}${C_BLD}"
C_WHT_BLD="${C_WHT}${C_BLD}"
C_YLW_BLD="${C_YLW}${C_BLD}"

# Normal+Dark
C_BLK_DRK="${C_BLK}${C_DRK}"
C_BLU_DRK="${C_BLU}${C_DRK}"
C_CYN_DRK="${C_CYN}${C_DRK}"
C_GRN_DRK="${C_GRN}${C_DRK}"
C_GRY_DRK="${C_GRY}${C_DRK}"
C_ORN_DRK="${C_ORN}${C_DRK}"
C_PNK_DRK="${C_PNK}${C_DRK}"
C_PRP_DRK="${C_PRP}${C_DRK}"
C_RED_DRK="${C_RED}${C_DRK}"
C_WHT_DRK="${C_WHT}${C_DRK}"
C_YLW_DRK="${C_YLW}${C_DRK}"

# Normal+Flashing
C_BLK_FLS="${C_BLK}${C_FLS}"
C_BLU_FLS="${C_BLU}${C_FLS}"
C_CYN_FLS="${C_CYN}${C_FLS}"
C_GRN_FLS="${C_GRN}${C_FLS}"
C_GRY_FLS="${C_GRY}${C_FLS}"
C_ORN_FLS="${C_ORN}${C_FLS}"
C_PNK_FLS="${C_PNK}${C_FLS}"
C_PRP_FLS="${C_PRP}${C_FLS}"
C_RED_FLS="${C_RED}${C_FLS}"
C_WHT_FLS="${C_WHT}${C_FLS}"
C_YLW_FLS="${C_YLW}${C_FLS}"

# Normal+Inverted
C_BLK_INV="${C_BLK}${C_INV}"
C_BLU_INV="${C_BLU}${C_INV}"
C_CYN_INV="${C_CYN}${C_INV}"
C_GRN_INV="${C_GRN}${C_INV}"
C_GRY_INV="${C_GRY}${C_INV}"
C_ORN_INV="${C_ORN}${C_INV}"
C_PNK_INV="${C_PNK}${C_INV}"
C_PRP_INV="${C_PRP}${C_INV}"
C_RED_INV="${C_RED}${C_INV}"
C_WHT_INV="${C_WHT}${C_INV}"
C_YLW_INV="${C_YLW}${C_INV}"

# Normal+Italic
C_BLK_ITA="${C_BLK}${C_ITA}"
C_BLU_ITA="${C_BLU}${C_ITA}"
C_CYN_ITA="${C_CYN}${C_ITA}"
C_GRN_ITA="${C_GRN}${C_ITA}"
C_GRY_ITA="${C_GRY}${C_ITA}"
C_ORN_ITA="${C_ORN}${C_ITA}"
C_PNK_ITA="${C_PNK}${C_ITA}"
C_PRP_ITA="${C_PRP}${C_ITA}"
C_RED_ITA="${C_RED}${C_ITA}"
C_WHT_ITA="${C_WHT}${C_ITA}"
C_YLW_ITA="${C_YLW}${C_ITA}"

# Normal+Underline
C_BLK_UDL="${C_BLK}${C_UDL}"
C_BLU_UDL="${C_BLU}${C_UDL}"
C_CYN_UDL="${C_CYN}${C_UDL}"
C_GRN_UDL="${C_GRN}${C_UDL}"
C_GRY_UDL="${C_GRY}${C_UDL}"
C_ORN_UDL="${C_ORN}${C_UDL}"
C_PNK_UDL="${C_PNK}${C_UDL}"
C_PRP_UDL="${C_PRP}${C_UDL}"
C_RED_UDL="${C_RED}${C_UDL}"
C_WHT_UDL="${C_WHT}${C_UDL}"
C_YLW_UDL="${C_YLW}${C_UDL}"


# Bright+Bold
C_BLK_BRT_BLD="${C_BLK_BRT}${C_BLD}"
C_BLU_BRT_BLD="${C_BLU_BRT}${C_BLD}"
C_CYN_BRT_BLD="${C_CYN_BRT}${C_BLD}"
C_GRN_BRT_BLD="${C_GRN_BRT}${C_BLD}"
C_GRY_BRT_BLD="${C_GRY_BRT}${C_BLD}"
C_ORN_BRT_BLD="${C_ORN_BRT}${C_BLD}"
C_PNK_BRT_BLD="${C_PNK_BRT}${C_BLD}"
C_PRP_BRT_BLD="${C_PRP_BRT}${C_BLD}"
C_RED_BRT_BLD="${C_RED_BRT}${C_BLD}"
C_WHT_BRT_BLD="${C_WHT_BRT}${C_BLD}"
C_YLW_BRT_BLD="${C_YLW_BRT}${C_BLD}"

# Bright+Dark
C_BLK_BRT_DRK="${C_BLK_BRT}${C_DRK}"
C_BLU_BRT_DRK="${C_BLU_BRT}${C_DRK}"
C_CYN_BRT_DRK="${C_CYN_BRT}${C_DRK}"
C_GRN_BRT_DRK="${C_GRN_BRT}${C_DRK}"
C_GRY_BRT_DRK="${C_GRY_BRT}${C_DRK}"
C_ORN_BRT_DRK="${C_ORN_BRT}${C_DRK}"
C_PNK_BRT_DRK="${C_PNK_BRT}${C_DRK}"
C_PRP_BRT_DRK="${C_PRP_BRT}${C_DRK}"
C_RED_BRT_DRK="${C_RED_BRT}${C_DRK}"
C_WHT_BRT_DRK="${C_WHT_BRT}${C_DRK}"
C_YLW_BRT_DRK="${C_YLW_BRT}${C_DRK}"

# Bright+Flashing
C_BLK_BRT_FLS="${C_BLK_BRT}${C_FLS}"
C_BLU_BRT_FLS="${C_BLU_BRT}${C_FLS}"
C_CYN_BRT_FLS="${C_CYN_BRT}${C_FLS}"
C_GRN_BRT_FLS="${C_GRN_BRT}${C_FLS}"
C_GRY_BRT_FLS="${C_GRY_BRT}${C_FLS}"
C_ORN_BRT_FLS="${C_ORN_BRT}${C_FLS}"
C_PNK_BRT_FLS="${C_PNK_BRT}${C_FLS}"
C_PRP_BRT_FLS="${C_PRP_BRT}${C_FLS}"
C_RED_BRT_FLS="${C_RED_BRT}${C_FLS}"
C_WHT_BRT_FLS="${C_WHT_BRT}${C_FLS}"
C_YLW_BRT_FLS="${C_YLW_BRT}${C_FLS}"

# Bright+Inverted
C_BLK_BRT_INV="${C_BLK_BRT}${C_INV}"
C_BLU_BRT_INV="${C_BLU_BRT}${C_INV}"
C_CYN_BRT_INV="${C_CYN_BRT}${C_INV}"
C_GRN_BRT_INV="${C_GRN_BRT}${C_INV}"
C_GRY_BRT_INV="${C_GRY_BRT}${C_INV}"
C_ORN_BRT_INV="${C_ORN_BRT}${C_INV}"
C_PNK_BRT_INV="${C_PNK_BRT}${C_INV}"
C_PRP_BRT_INV="${C_PRP_BRT}${C_INV}"
C_RED_BRT_INV="${C_RED_BRT}${C_INV}"
C_WHT_BRT_INV="${C_WHT_BRT}${C_INV}"
C_YLW_BRT_INV="${C_YLW_BRT}${C_INV}"

# Bright+Italic
C_BLK_BRT_ITA="${C_BLK_BRT}${C_ITA}"
C_BLU_BRT_ITA="${C_BLU_BRT}${C_ITA}"
C_CYN_BRT_ITA="${C_CYN_BRT}${C_ITA}"
C_GRN_BRT_ITA="${C_GRN_BRT}${C_ITA}"
C_GRY_BRT_ITA="${C_GRY_BRT}${C_ITA}"
C_ORN_BRT_ITA="${C_ORN_BRT}${C_ITA}"
C_PNK_BRT_ITA="${C_PNK_BRT}${C_ITA}"
C_PRP_BRT_ITA="${C_PRP_BRT}${C_ITA}"
C_RED_BRT_ITA="${C_RED_BRT}${C_ITA}"
C_WHT_BRT_ITA="${C_WHT_BRT}${C_ITA}"
C_YLW_BRT_ITA="${C_YLW_BRT}${C_ITA}"

# Bright+Underline
C_BLK_BRT_UDL="${C_BLK_BRT}${C_UDL}"
C_BLU_BRT_UDL="${C_BLU_BRT}${C_UDL}"
C_CYN_BRT_UDL="${C_CYN_BRT}${C_UDL}"
C_GRN_BRT_UDL="${C_GRN_BRT}${C_UDL}"
C_GRY_BRT_UDL="${C_GRY_BRT}${C_UDL}"
C_ORN_BRT_UDL="${C_ORN_BRT}${C_UDL}"
C_PNK_BRT_UDL="${C_PNK_BRT}${C_UDL}"
C_PRP_BRT_UDL="${C_PRP_BRT}${C_UDL}"
C_RED_BRT_UDL="${C_RED_BRT}${C_UDL}"
C_WHT_BRT_UDL="${C_WHT_BRT}${C_UDL}"
C_YLW_BRT_UDL="${C_YLW_BRT}${C_UDL}"

# Bold+Bright+Flashing
C_BLK_BLD_BRT_FLS="${C_BLK_BRT_BLD}${C_FLS}"
C_BLU_BLD_BRT_FLS="${C_BLU_BRT_BLD}${C_FLS}"
C_CYN_BLD_BRT_FLS="${C_CYN_BRT_BLD}${C_FLS}"
C_GRN_BLD_BRT_FLS="${C_GRN_BRT_BLD}${C_FLS}"
C_GRY_BLD_BRT_FLS="${C_GRY_BRT_BLD}${C_FLS}"
C_ORN_BLD_BRT_FLS="${C_ORN_BRT_BLD}${C_FLS}"
C_PNK_BLD_BRT_FLS="${C_PNK_BRT_BLD}${C_FLS}"
C_PRP_BLD_BRT_FLS="${C_PRP_BRT_BLD}${C_FLS}"
C_RED_BLD_BRT_FLS="${C_RED_BRT_BLD}${C_FLS}"
C_WHT_BLD_BRT_FLS="${C_WHT_BRT_BLD}${C_FLS}"
C_YLW_BLD_BRT_FLS="${C_YLW_BRT_BLD}${C_FLS}"

# Flashing alert - bright red background, bold bright white foreground
C_ALT="${C_WHT_BRT_BLD}\\e[41;5m"

# Export color variables
export C_ALT C_BLD C_CODE C_DRK C_FLS C_INV C_ITA C_RST C_UDL

export C_BLK C_BLK_BLD C_BLK_BLD_BRT_FLS C_BLK_BRT C_BLK_BRT_BLD C_BLK_BRT_DRK C_BLK_BRT_FLS C_BLK_BRT_INV C_BLK_BRT_ITA C_BLK_BRT_UDL C_BLK_DRK C_BLK_FLS C_BLK_INV C_BLK_ITA C_BLK_UDL
export C_BLU C_BLU_BLD C_BLU_BLD_BRT_FLS C_BLU_BRT C_BLU_BRT_BLD C_BLU_BRT_DRK C_BLU_BRT_FLS C_BLU_BRT_INV C_BLU_BRT_ITA C_BLU_BRT_UDL C_BLU_DRK C_BLU_FLS C_BLU_INV C_BLU_ITA C_BLU_UDL
export C_CYN C_CYN_BLD C_CYN_BLD_BRT_FLS C_CYN_BRT C_CYN_BRT_BLD C_CYN_BRT_DRK C_CYN_BRT_FLS C_CYN_BRT_INV C_CYN_BRT_ITA C_CYN_BRT_UDL C_CYN_DRK C_CYN_FLS C_CYN_INV C_CYN_ITA C_CYN_UDL
export C_GRN C_GRN_BLD C_GRN_BLD_BRT_FLS C_GRN_BRT C_GRN_BRT_BLD C_GRN_BRT_DRK C_GRN_BRT_FLS C_GRN_BRT_INV C_GRN_BRT_ITA C_GRN_BRT_UDL C_GRN_DRK C_GRN_FLS C_GRN_INV C_GRN_ITA C_GRN_UDL
export C_GRY C_GRY_BLD C_GRY_BLD_BRT_FLS C_GRY_BRT C_GRY_BRT_BLD C_GRY_BRT_DRK C_GRY_BRT_FLS C_GRY_BRT_INV C_GRY_BRT_ITA C_GRY_BRT_UDL C_GRY_DRK C_GRY_FLS C_GRY_INV C_GRY_ITA C_GRY_UDL
export C_ORN C_ORN_BLD C_ORN_BLD_BRT_FLS C_ORN_BRT C_ORN_BRT_BLD C_ORN_BRT_DRK C_ORN_BRT_FLS C_ORN_BRT_INV C_ORN_BRT_ITA C_ORN_BRT_UDL C_ORN_DRK C_ORN_FLS C_ORN_INV C_ORN_ITA C_ORN_UDL
export C_PNK C_PNK_BLD C_PNK_BLD_BRT_FLS C_PNK_BRT C_PNK_BRT_BLD C_PNK_BRT_DRK C_PNK_BRT_FLS C_PNK_BRT_INV C_PNK_BRT_ITA C_PNK_BRT_UDL C_PNK_DRK C_PNK_FLS C_PNK_INV C_PNK_ITA C_PNK_UDL
export C_PRP C_PRP_BLD C_PRP_BLD_BRT_FLS C_PRP_BRT C_PRP_BRT_BLD C_PRP_BRT_DRK C_PRP_BRT_FLS C_PRP_BRT_INV C_PRP_BRT_ITA C_PRP_BRT_UDL C_PRP_DRK C_PRP_FLS C_PRP_INV C_PRP_ITA C_PRP_UDL
export C_RED C_RED_BLD C_RED_BLD_BRT_FLS C_RED_BRT C_RED_BRT_BLD C_RED_BRT_DRK C_RED_BRT_FLS C_RED_BRT_INV C_RED_BRT_ITA C_RED_BRT_UDL C_RED_DRK C_RED_FLS C_RED_INV C_RED_ITA C_RED_UDL
export C_WHT C_WHT_BLD C_WHT_BLD_BRT_FLS C_WHT_BRT C_WHT_BRT_BLD C_WHT_BRT_DRK C_WHT_BRT_FLS C_WHT_BRT_INV C_WHT_BRT_ITA C_WHT_BRT_UDL C_WHT_DRK C_WHT_FLS C_WHT_INV C_WHT_ITA C_WHT_UDL
export C_YLW C_YLW_BLD C_YLW_BLD_BRT_FLS C_YLW_BRT C_YLW_BRT_BLD C_YLW_BRT_DRK C_YLW_BRT_FLS C_YLW_BRT_INV C_YLW_BRT_ITA C_YLW_BRT_UDL C_YLW_DRK C_YLW_FLS C_YLW_INV C_YLW_ITA C_YLW_UDL

# Grep 3.0+ colors
export GREP_COLORS='bn=38;2;241;196;15:cx=38;2;131;133;134;3:fn=38;2;108;113;196;3:ln=38;2;46;204;113:mt=38;2;255;34;34;1:se=38;2;52;152;219:sl=38;2;236;240;241';

#### Color variables ==final ####


#### Color test functions ==start ####

_show_colors_16m() {
	# Bounce if term not wide enough
	[[ "${COLUMNS}" -lt 95 ]] && output error "Terminal needs to be at least 95 columns to do show-colors-16m, cannot continue" && return

	# Refresh color palette
	# shellcheck source=./03-colors
	source "${BASH_ENV_FILE_COLORS}"

	_show_colors_16m_work "${@}"
}

_show_colors_256() {
	# Bounce if term not wide enough
	[[ "${COLUMNS}" -lt 196 ]] && output error "Terminal needs to be at least 196 columns to show-colors-256, cannot continue" && return

	# Refresh color palette
	# shellcheck source=./03-colors
	source "${BASH_ENV_FILE_COLORS}"

	_show_colors_256_work
}

_show_colors_16m_work() {
	# Clear screen
	clear

	local TEST_STRING="testing TEXT${C_RST}"

	echo -e "      -= Normal =- | -= ${C_WHT_BRT}Bright${C_RST} =-"
	echo -e "BLK | ${C_BLK}${TEST_STRING} | ${C_BLK_BRT}${TEST_STRING}"
	echo -e "BLU | ${C_BLU}${TEST_STRING} | ${C_BLU_BRT}${TEST_STRING}"
	echo -e "CYN | ${C_CYN}${TEST_STRING} | ${C_CYN_BRT}${TEST_STRING}"
	echo -e "GRN | ${C_GRN}${TEST_STRING} | ${C_GRN_BRT}${TEST_STRING}"
	echo -e "GRY | ${C_GRY}${TEST_STRING} | ${C_GRY_BRT}${TEST_STRING}"
	echo -e "ORN | ${C_ORN}${TEST_STRING} | ${C_ORN_BRT}${TEST_STRING}"
	echo -e "PNK | ${C_PNK}${TEST_STRING} | ${C_PNK_BRT}${TEST_STRING}"
	echo -e "PRP | ${C_PRP}${TEST_STRING} | ${C_PRP_BRT}${TEST_STRING}"
	echo -e "RED | ${C_RED}${TEST_STRING} | ${C_RED_BRT}${TEST_STRING}"
	echo -e "WHT | ${C_WHT}${TEST_STRING} | ${C_WHT_BRT}${TEST_STRING}"
	echo -e "YLW | ${C_YLW}${TEST_STRING} | ${C_YLW_BRT}${TEST_STRING}"
	echo

	echo -e "NRM | ${C_BLK}${TEST_STRING} | ${C_BLU}${TEST_STRING} | ${C_CYN}${TEST_STRING} | ${C_GRN}${TEST_STRING} | ${C_GRY}${TEST_STRING}"
	echo -e "BRT | ${C_BLK_BRT}${TEST_STRING} | ${C_BLU_BRT}${TEST_STRING} | ${C_CYN_BRT}${TEST_STRING} | ${C_GRN_BRT}${TEST_STRING} | ${C_GRY_BRT}${TEST_STRING}"
	echo

	echo -e "NRM | ${C_ORN}${TEST_STRING} | ${C_PRP}${TEST_STRING} | ${C_RED}${TEST_STRING} | ${C_WHT}${TEST_STRING} | ${C_YLW}${TEST_STRING}"
	echo -e "BRT | ${C_ORN_BRT}${TEST_STRING} | ${C_PRP_BRT}${TEST_STRING} | ${C_RED_BRT}${TEST_STRING} | ${C_WHT_BRT}${TEST_STRING} | ${C_YLW_BRT}${TEST_STRING}"
	echo

	echo -e "      -= Normal =- | --= ${C_BLD}Bold${C_RST} =-- | --= ${C_DRK}Dark${C_RST} =-- | -= ${C_INV}Invert${C_RST} =- | -= ${C_ITA}Italic${C_RST} =- | -= ${C_UDL}Underl${C_RST} =-"
	echo -e "BLK | ${C_BLK}${TEST_STRING} | ${C_BLK_BLD}${TEST_STRING} | ${C_BLK_DRK}${TEST_STRING} | ${C_BLK_INV}${TEST_STRING} | ${C_BLK_ITA}${TEST_STRING} | ${C_BLK_UDL}${TEST_STRING}"
	echo -e "BLU | ${C_BLU}${TEST_STRING} | ${C_BLU_BLD}${TEST_STRING} | ${C_BLU_DRK}${TEST_STRING} | ${C_BLU_INV}${TEST_STRING} | ${C_BLU_ITA}${TEST_STRING} | ${C_BLU_UDL}${TEST_STRING}"
	echo -e "CYN | ${C_CYN}${TEST_STRING} | ${C_CYN_BLD}${TEST_STRING} | ${C_CYN_DRK}${TEST_STRING} | ${C_CYN_INV}${TEST_STRING} | ${C_CYN_ITA}${TEST_STRING} | ${C_CYN_UDL}${TEST_STRING}"
	echo -e "GRN | ${C_GRN}${TEST_STRING} | ${C_GRN_BLD}${TEST_STRING} | ${C_GRN_DRK}${TEST_STRING} | ${C_GRN_INV}${TEST_STRING} | ${C_GRN_ITA}${TEST_STRING} | ${C_GRN_UDL}${TEST_STRING}"
	echo -e "GRY | ${C_GRY}${TEST_STRING} | ${C_GRY_BLD}${TEST_STRING} | ${C_GRY_DRK}${TEST_STRING} | ${C_GRY_INV}${TEST_STRING} | ${C_GRY_ITA}${TEST_STRING} | ${C_GRY_UDL}${TEST_STRING}"
	echo -e "ORN | ${C_ORN}${TEST_STRING} | ${C_ORN_BLD}${TEST_STRING} | ${C_ORN_DRK}${TEST_STRING} | ${C_ORN_INV}${TEST_STRING} | ${C_ORN_ITA}${TEST_STRING} | ${C_ORN_UDL}${TEST_STRING}"
	echo -e "PNK | ${C_PNK}${TEST_STRING} | ${C_PNK_BLD}${TEST_STRING} | ${C_PNK_DRK}${TEST_STRING} | ${C_PNK_INV}${TEST_STRING} | ${C_PNK_ITA}${TEST_STRING} | ${C_PNK_UDL}${TEST_STRING}"
	echo -e "PRP | ${C_PRP}${TEST_STRING} | ${C_PRP_BLD}${TEST_STRING} | ${C_PRP_DRK}${TEST_STRING} | ${C_PRP_INV}${TEST_STRING} | ${C_PRP_ITA}${TEST_STRING} | ${C_PRP_UDL}${TEST_STRING}"
	echo -e "RED | ${C_RED}${TEST_STRING} | ${C_RED_BLD}${TEST_STRING} | ${C_RED_DRK}${TEST_STRING} | ${C_RED_INV}${TEST_STRING} | ${C_RED_ITA}${TEST_STRING} | ${C_RED_UDL}${TEST_STRING}"
	echo -e "WHT | ${C_WHT}${TEST_STRING} | ${C_WHT_BLD}${TEST_STRING} | ${C_WHT_DRK}${TEST_STRING} | ${C_WHT_INV}${TEST_STRING} | ${C_WHT_ITA}${TEST_STRING} | ${C_WHT_UDL}${TEST_STRING}"
	echo -e "YLW | ${C_YLW}${TEST_STRING} | ${C_YLW_BLD}${TEST_STRING} | ${C_YLW_DRK}${TEST_STRING} | ${C_YLW_INV}${TEST_STRING} | ${C_YLW_ITA}${TEST_STRING} | ${C_YLW_UDL}${TEST_STRING}"
	echo

	echo -e "      -= Bright =- | --= ${C_BLD}Bold${C_RST} =-- | --= ${C_DRK}Dark${C_RST} =-- | -= ${C_INV}Invert${C_RST} =- | -= ${C_ITA}Italic${C_RST} =- | -= ${C_UDL}Underl${C_RST} =-"
	echo -e "BLK | ${C_BLK_BRT}${TEST_STRING} | ${C_BLK_BRT_BLD}${TEST_STRING} | ${C_BLK_BRT_DRK}${TEST_STRING} | ${C_BLK_BRT_INV}${TEST_STRING} | ${C_BLK_BRT_ITA}${TEST_STRING} | ${C_BLK_BRT_UDL}${TEST_STRING}"
	echo -e "BLU | ${C_BLU_BRT}${TEST_STRING} | ${C_BLU_BRT_BLD}${TEST_STRING} | ${C_BLU_BRT_DRK}${TEST_STRING} | ${C_BLU_BRT_INV}${TEST_STRING} | ${C_BLU_BRT_ITA}${TEST_STRING} | ${C_BLU_BRT_UDL}${TEST_STRING}"
	echo -e "CYN | ${C_CYN_BRT}${TEST_STRING} | ${C_CYN_BRT_BLD}${TEST_STRING} | ${C_CYN_BRT_DRK}${TEST_STRING} | ${C_CYN_BRT_INV}${TEST_STRING} | ${C_CYN_BRT_ITA}${TEST_STRING} | ${C_CYN_BRT_UDL}${TEST_STRING}"
	echo -e "GRN | ${C_GRN_BRT}${TEST_STRING} | ${C_GRN_BRT_BLD}${TEST_STRING} | ${C_GRN_BRT_DRK}${TEST_STRING} | ${C_GRN_BRT_INV}${TEST_STRING} | ${C_GRN_BRT_ITA}${TEST_STRING} | ${C_GRN_BRT_UDL}${TEST_STRING}"
	echo -e "GRY | ${C_GRY_BRT}${TEST_STRING} | ${C_GRY_BRT_BLD}${TEST_STRING} | ${C_GRY_BRT_DRK}${TEST_STRING} | ${C_GRY_BRT_INV}${TEST_STRING} | ${C_GRY_BRT_ITA}${TEST_STRING} | ${C_GRY_BRT_UDL}${TEST_STRING}"
	echo -e "ORN | ${C_ORN_BRT}${TEST_STRING} | ${C_ORN_BRT_BLD}${TEST_STRING} | ${C_ORN_BRT_DRK}${TEST_STRING} | ${C_ORN_BRT_INV}${TEST_STRING} | ${C_ORN_BRT_ITA}${TEST_STRING} | ${C_ORN_BRT_UDL}${TEST_STRING}"
	echo -e "PNK | ${C_PNK_BRT}${TEST_STRING} | ${C_PNK_BRT_BLD}${TEST_STRING} | ${C_PNK_BRT_DRK}${TEST_STRING} | ${C_PNK_BRT_INV}${TEST_STRING} | ${C_PNK_BRT_ITA}${TEST_STRING} | ${C_PNK_BRT_UDL}${TEST_STRING}"
	echo -e "PRP | ${C_PRP_BRT}${TEST_STRING} | ${C_PRP_BRT_BLD}${TEST_STRING} | ${C_PRP_BRT_DRK}${TEST_STRING} | ${C_PRP_BRT_INV}${TEST_STRING} | ${C_PRP_BRT_ITA}${TEST_STRING} | ${C_PRP_BRT_UDL}${TEST_STRING}"
	echo -e "RED | ${C_RED_BRT}${TEST_STRING} | ${C_RED_BRT_BLD}${TEST_STRING} | ${C_RED_BRT_DRK}${TEST_STRING} | ${C_RED_BRT_INV}${TEST_STRING} | ${C_RED_BRT_ITA}${TEST_STRING} | ${C_RED_BRT_UDL}${TEST_STRING}"
	echo -e "WHT | ${C_WHT_BRT}${TEST_STRING} | ${C_WHT_BRT_BLD}${TEST_STRING} | ${C_WHT_BRT_DRK}${TEST_STRING} | ${C_WHT_BRT_INV}${TEST_STRING} | ${C_WHT_BRT_ITA}${TEST_STRING} | ${C_WHT_BRT_UDL}${TEST_STRING}"
	echo -e "YLW | ${C_YLW_BRT}${TEST_STRING} | ${C_YLW_BRT_BLD}${TEST_STRING} | ${C_YLW_BRT_DRK}${TEST_STRING} | ${C_YLW_BRT_INV}${TEST_STRING} | ${C_YLW_BRT_ITA}${TEST_STRING} | ${C_YLW_BRT_UDL}${TEST_STRING}"
	echo

	if [[ "${1}" == "-f" ]]; then
		echo -e "C_BLK_FLS : ${C_BLK_FLS}${TEST_STRING}"
		echo -e "C_BLU_FLS : ${C_BLU_FLS}${TEST_STRING}"
		echo -e "C_CYN_FLS : ${C_CYN_FLS}${TEST_STRING}"
		echo -e "C_GRN_FLS : ${C_GRN_FLS}${TEST_STRING}"
		echo -e "C_GRY_FLS : ${C_GRY_FLS}${TEST_STRING}"
		echo -e "C_ORN_FLS : ${C_ORN_FLS}${TEST_STRING}"
		echo -e "C_PRP_FLS : ${C_PRP_FLS}${TEST_STRING}"
		echo -e "C_RED_FLS : ${C_RED_FLS}${TEST_STRING}"
		echo -e "C_WHT_FLS : ${C_WHT_FLS}${TEST_STRING}"
		echo -e "C_YLW_FLS : ${C_YLW_FLS}${TEST_STRING}"
		echo

		echo -e "C_BLK_BRT_FLS : ${C_BLK_BRT_FLS}${TEST_STRING}"
		echo -e "C_BLU_BRT_FLS : ${C_BLU_BRT_FLS}${TEST_STRING}"
		echo -e "C_CYN_BRT_FLS : ${C_CYN_BRT_FLS}${TEST_STRING}"
		echo -e "C_GRN_BRT_FLS : ${C_GRN_BRT_FLS}${TEST_STRING}"
		echo -e "C_GRY_BRT_FLS : ${C_GRY_BRT_FLS}${TEST_STRING}"
		echo -e "C_ORN_BRT_FLS : ${C_ORN_BRT_FLS}${TEST_STRING}"
		echo -e "C_PRP_BRT_FLS : ${C_PRP_BRT_FLS}${TEST_STRING}"
		echo -e "C_RED_BRT_FLS : ${C_RED_BRT_FLS}${TEST_STRING}"
		echo -e "C_WHT_BRT_FLS : ${C_WHT_BRT_FLS}${TEST_STRING}"
		echo -e "C_YLW_BRT_FLS : ${C_YLW_BRT_FLS}${TEST_STRING}"
		echo

		echo -e "C_BLK_BLD_BRT_FLS : ${C_BLK_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_BLU_BLD_BRT_FLS : ${C_BLU_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_CYN_BLD_BRT_FLS : ${C_CYN_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_GRN_BLD_BRT_FLS : ${C_GRN_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_GRY_BLD_BRT_FLS : ${C_GRY_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_ORN_BLD_BRT_FLS : ${C_ORN_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_PRP_BLD_BRT_FLS : ${C_PRP_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_RED_BLD_BRT_FLS : ${C_RED_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_WHT_BLD_BRT_FLS : ${C_WHT_BLD_BRT_FLS}${TEST_STRING}"
		echo -e "C_YLW_BLD_BRT_FLS : ${C_YLW_BLD_BRT_FLS}${TEST_STRING}"
		echo
	fi
}

# Show all of the (256) colors
_show_colors_256_work() {
	# Clear screen
	clear

	output stderr "--= Colors =--"
	echo "30-37 : foreground"
	echo "40-47 : background"
	echo

	output stderr "-= Modifiers =-"
	echo " 1 : bold"
	echo " 2 : dim"
	echo " 3 : italic"
	echo " 4 : underline"
	echo " 5 : flashing"
	echo " 7 : inverted"
	echo

	output stderr "---= Demo =---"
	# Foreground colors
	for COLORS_FOREGROUND in {30..37}; do
		# No background
		local COLOR_VALS="${COLORS_FOREGROUND:+$COLORS_FOREGROUND;}"
		local COLOR_VALS="${COLOR_VALS%%;}"
		local SEQUENCE="${COLOR_VALS:+\e[${COLOR_VALS}m}"

		printf " %-6s" "${SEQUENCE:-(default)}"
		printf " ${SEQUENCE}text\\e[m"
		printf " \\e[${COLOR_VALS:+${COLOR_VALS+$COLOR_VALS;}}1mbold\\e[m"

		# Flashing
		local COLOR_VALS="${COLORS_FOREGROUND:+$COLORS_FOREGROUND;}5"
		local COLOR_VALS="${COLOR_VALS%%;}"
		local SEQUENCE="${COLOR_VALS:+\e[${COLOR_VALS}m}"

		printf " %-6s" "${SEQUENCE:-(default)}"
		printf " ${SEQUENCE}text\\e[m"
		printf " \\e[${COLOR_VALS:+${COLOR_VALS+$COLOR_VALS;}}1mbold\\e[m"

		# Background colors
		for COLORS_BACKGROUND in {40..47}; do
			# White
			local COLORS_FOREGROUND=${COLORS_FOREGROUND#37}

			# Black
			local COLOR_VALS="${COLORS_FOREGROUND:+$COLORS_FOREGROUND;}${COLORS_BACKGROUND}"
			local COLOR_VALS="${COLOR_VALS%%;}"
			local SEQUENCE="${COLOR_VALS:+\e[${COLOR_VALS}m}"

			printf " %-9s" "${SEQUENCE:-(default)}"
			printf " ${SEQUENCE}text\\e[m"
			printf " \\e[${COLOR_VALS:+${COLOR_VALS+$COLOR_VALS;}}1mbold\\e[m"
		done
		echo
	done
	echo
}

#### Color test functions ==final ####


#### Color test function aliases ==start ####

alias show-colors-16m='_show_colors_16m'
alias show-colors-256='_show_colors_256'

#### Color test function aliases ==final ####


#### Environment color config ==start ####

# Default "user color" configuration, overridden by library in 'extra' dir if present
# Root = red, non-root = green
if [[ "${BASH_ENV_COLOR_16M}" == "true" ]]; then
	[[ "${UID}" == "0" ]] && C_ENV="${C_RED}" || C_ENV="${C_ENV-${C_GRN}}"
else
	[[ "${UID}" == "0" ]] && C_ENV='\[31m' || C_ENV='\e[32m'
fi

C_ENV_BOLD="${C_BLD}${C_ENV}"
export C_ENV C_ENV_BOLD

#### Environment color config ==final ####


# vim: set syntax=sh filetype=sh ts=2 sw=2 tw=0 noet :
