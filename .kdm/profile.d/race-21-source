#!/usr/bin/env bash

# shellcheck disable=SC1090
# shellcheck disable=SC1091

. "${HOME}/.kdm/profile.d/02-arrays"

TIMEFORMAT_OLD="${TIMEFORMAT}"

export TIMEFORMAT_RACE="true"

DIR_TEMP="$(mktemp -d)"
FILE_TEMP_RAW="${DIR_TEMP}/race-times-raw.csv"
FILE_TEMP_SORTED="${DIR_TEMP}/race-times-sorted.csv"





# Source the files in ARRAY_SOURCE if they exist
for ENTRY in "${ARRAY_SOURCE[@]}"; do
	unset SOURCE_EXIT
	unset SOURCE_FILE

	[[ ! -s "${ENTRY}" ]] && continue

	[[ "$(basename "${ENTRY}")" == "rc" ]] && continue

	TIME_START="$(date '+%s%N')"
	. "${ENTRY}"
	SOURCE_EXIT="${?}"
	TIME_END="$(date '+%s%N')"

	MILLISECONDS="$(bc -l <<< "scale=3; (${TIME_END}-${TIME_START})/1000000")"

	echo "${MILLISECONDS},${ENTRY}" >> "${FILE_TEMP_RAW}"

	[[ "${SOURCE_VERBOSE}" != "true" ]] && continue

	SOURCE_FILE="${ENTRY/${HOME}\/\.kdm\//}"
	if [[ "${SOURCE_EXIT}" == "0" ]]; then
		output kvt "Loaded" "${SOURCE_FILE}"
		continue
	fi

	output kvf "Failed" "${SOURCE_FILE}"
done


# Source any possible global bashrc(s) under /etc
# ARRAY_SOURCE_GLOBAL=(bash.bashrc bashrc)
# for FILE in "${ARRAY_SOURCE_GLOBAL[@]}"; do
# 	FILE="/etc/${FILE}"
# 	[[ -f "${FILE}" ]] && . "${FILE}"
# done; unset FILE
# 
# # Build array of files under ~/.kdm/rc.d and source them
# mapfile -t ARRAY_SOURCE_RC_D < <(find "${BASH_ENV_DIR_RC_D}" -maxdepth 1 -executable -type f 2> /dev/null | sort)
# for FILE in "${ARRAY_SOURCE_RC_D[@]}"; do
# 	. "${FILE}"
# done; unset FILE


# Source bash libraries from ~/.kdm/extra
for ENTRY in $(find -L "${BASH_ENV_DIR_EXTRA}" -maxdepth 1 -type f -executable | sort); do
	# Skip README
	[[ "${ENTRY}" == "README" ]] && continue

	unset SOURCE_EXIT
	unset SOURCE_FILE

	TIME_START="$(date '+%s%N')"
	. "${ENTRY}"
	SOURCE_EXIT="${?}"
	TIME_END="$(date '+%s%N')"

	MILLISECONDS="$(bc -l <<< "scale=3; (${TIME_END}-${TIME_START})/1000000")"

	echo "${MILLISECONDS},${ENTRY}" >> "${FILE_TEMP_RAW}"

	[[ "${SOURCE_VERBOSE}" != "true" ]] && continue

	SOURCE_FILE="${ENTRY/${HOME}\/\.kdm\//}"
	if [[ "${SOURCE_EXIT}" == "0" ]]; then
		output kvb "Loaded" "${SOURCE_FILE}"
		continue
	fi

	output kvf "Failed" "${SOURCE_FILE}"
done

unset SOURCE_EXIT
unset SOURCE_FILE


export TIMEFORMAT="${TIMEFORMAT_OLD}"

unset TIMEFORMAT_RACE


echo "Milliseconds elapsed, file name" >> "${FILE_TEMP_SORTED}"
sort -nr "${FILE_TEMP_RAW}" >> "${FILE_TEMP_SORTED}"

cat "${FILE_TEMP_SORTED}"

rm -rf "${DIR_TEMP}"


# vim: set filetype=sh ts=2 sw=2 tw=0 noet :
