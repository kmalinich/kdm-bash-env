# shellcheck disable=SC2034

# kdm bash-env bash_profile arrays

ARRAY_CONF_INIT=(
COLOR_16M
PROMPT_NO_HOSTNAME
WARN_FACTER
)

# Ignore bland commands
ARRAY_HISTIGNORE=(
..
[bf]g
cd
clear
dc
dl
dt
env
env-sort
exit
screen
g-gi
g-gs
g-gu
l
l.
l1
la
ll
ll.
lld
lll
ls
mount
pwd
umount
)
# Generate HISTIGNORE from array
HISTIGNORE="$(for IGNORE in "${ARRAY_HISTIGNORE[@]}"; do echo -n "${IGNORE}:"; done | sed 's/:$//g'; echo)"


# Array of editor aliases
ARRAY_EDITOR_ALIASES=(v vi vim nvim)

# Array of editor binaries
ARRAY_EDITOR_NAMES=(nvim vim vi)


ARRAY_MANPATH=(
"${HOME}/perl5/man"
/usr/local/share/man
/usr/pgsql-9.5/share/man
/usr/share/man/overrides
/usr/share/man/en
/usr/share/man
/usr/X11R6/share/man
/opt/X11/share/man
)

ARRAY_MIBDIRS=(
"${BASH_ENV_DIR_SNMP}/mibs"
/usr/share/snmp/mibs
)

ARRAY_MKDIR=(
"${BASH_ENV_DIR_KDM}"
"${BASH_ENV_DIR_SSH_CONFIG}"
"${BASH_ENV_DIR_VIM_BACKUP}"
"${BASH_ENV_DIR_VIM_TMP}"
)

ARRAY_NODE_PATH=(
/usr/lib/nodejs
/usr/lib/node_modules
/usr/local/lib/node_modules
)

ARRAY_PACKAGE_MANAGERS=(
apt-get
brew
dnf
dnf-3
pacman
yum
zypper
)

mapfile -t ARRAY_PATH < <(echo -e "${PATH//\:/\\n}")
ARRAY_PATH=(
"${HOME}/bin"
"${HOME}/.local/bin"
"${HOME}/perl5/bin"
"${HOME}/.composer/vendor/bin"
"${HOME}/Library/Android/sdk/platform-tools"
/usr/local/rvm/gems/ruby-2.4.0/bin
/usr/local/rvm/gems/ruby-2.4.0@global/bin
/usr/local/rvm/rubies/ruby-2.4.0/bin
/usr/local/rvm/bin
/usr/local/opt/coreutils/libexec/gnubin
/usr/local/opt/curl/bin
/usr/local/opt/libxml2/bin
/usr/local/opt/libxslt/bin
/usr/local/opt/openssl/bin
/usr/local/opt/openssl@1.1/bin
/usr/local/opt/ruby/bin
/opt/local/sbin
/opt/local/bin
/opt/puppetlabs/bin
/usr/local/sbin
/usr/local/bin
/usr/lib/nvidia-375/bin
/usr/pgsql-9.6/bin
/usr/pgsql-9.5/bin
/usr/pgsql-9.4/bin
/usr/libexec
/sbin
/bin
/usr/sbin
/usr/bin
/usr/bin/X11
/opt/X11/bin
/usr/X11R6/bin
/usr/games
/usr/lib/mit/bin
/usr/lib/mit/sbin
"${ARRAY_PATH[@]}"
)

ARRAY_RM=(
"${HOME}/.bash_history"
"${HOME}/.profile"
)

# Array of shell options to be set
ARRAY_SHELL_OPTIONS=(
cdable_vars
cdspell
checkhash
checkwinsize
histappend
no_empty_cmd_completion
)
# Removed for multicolor PS1
# xpg_echo

# Array of shell options that only work with bash 4+
ARRAY_SHELL_OPTIONS_BASH4=(
autocd
dirspell
)

ARRAY_SOURCE=(
/etc/profile.d/bash_completion.sh
/usr/local/etc/profile.d/bash_completion.sh
"${BASH_ENV_FILE_RC}"
)

# Array of automatic sudo-ing commands (Linux and macOS)
ARRAY_SUDO=(
arp
arp-scan
dd
dhcping
dmesg
iftop
ioping
jnettop
mount
netstat
nload
noping
oping
reboot
route
shutdown
sntop
su
sysctl
syslog
umount
visudo
)

# Array of automatic sudo-ing commands (Linux-only)
ARRAY_SUDO_LINUX=(
apt
apt-cache
apt-get
crontab
dnf
dnf-3
ether-wake
etherwake
fdisk
fedup
journalctl
pacman
rpi-update
rpm
service
systemctl
virsh
virt-admin
virt-clone
virt-convert
virt-host-validate
virt-install
virt-manager
virt-pki-validate
virt-viewer
virt-xml
virt-xml-validate
yum
zypper
)

# Array of automatic sudo-ing commands (macOS-only)
ARRAY_SUDO_MACOS=(
atsutil
chflags
cupsctl
defaults
diskutil
dscacheutil
dspci
fs_usage
gpt
installer
ioreg
kextcache
kextload
kextstat
kextutil
kextunload
keytool
launchctl
log
mdutil
newfs_apfs
newfs_exfat
newfs_hfs
newfs_msdos
newfs_udf
nvram
pmset
productutil
puppet
reboot
repair_packages
scutil
security
shutdown
softwareupdate
spctl
ssdtprgen
system_profiler
systemsetup
systemstats
trimforce
xcode-select
xcodebuild
)

ARRAY_TOUCH=(
"${BASH_ENV_FILE_HISTORY}"
"${BASH_ENV_FILE_CONFIG}"
"${BASH_ENV_FILE_SSH_AUTHKEYS}"
"${BASH_ENV_FILE_SSH_CACHE}"
"${BASH_ENV_FILE_SSH_CONFIG}"
"${BASH_ENV_FILE_SUDOCACHE}"
"${BASH_ENV_DIR_SSH_CONFIG}/00-base"
)


# Export above array variables
export ARRAY_SUDO
export ARRAY_SUDO_LINUX
export ARRAY_SUDO_MACOS
export HISTIGNORE


# vim: set syntax=sh filetype=sh ts=2 sw=2 tw=0 noet :
