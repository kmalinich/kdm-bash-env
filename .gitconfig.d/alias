[alias]
	a  = add
	af = add -f

	b   = branch
	ba  = branch -a
	bd  = branch -d
	bdd = branch -D
	bm  = branch --merged
	bnm = branch --no-merged

	cl    = clone --depth 1 --recursive --shallow-submodules
	clone = clone --depth 1 --recursive --shallow-submodules

	co  = checkout
	cob = checkout -b
	com = checkout master

	c   = commit
	ca  = commit -a
	cam = commit -a -m

	cp = "!cp() { git cam 'Update'; }; cp"

	d  = diff
	ds = describe

	# Delete any branches that have been merged into master
	# See also: https://gist.github.com/robmiller/5133264
	dm = "!dm() { git up && git branch --merged | grep -v '\\*' | xargs -n 1 git bd 2> /dev/null; }; dm"

	f = fetch --all --prune

	# Fix upstream
	fu = "!fu() { BRANCH=\"$(git get-b 2> /dev/null)\"; [[ -z "${BRANCH}" ]] && echo \"Error : No branch detected\" && return; BRANCH_UPSTREAM=\"origin/${BRANCH}\"; git b \"--set-upstream-to=${BRANCH_UPSTREAM}\" \"${BRANCH}\"; echo \"Set upstream to\" \"${BRANCH_UPSTREAM}\"; }; fu"

	get-b      = symbolic-ref --short HEAD
	get-br     = symbolic-ref --short HEAD
	get-branch = symbolic-ref --short HEAD
	get-commit = rev-parse HEAD
	get-dir    = rev-parse --git-dir
	get-tags   = describe --tags
	get-top    = rev-parse --show-toplevel
	get-url    = config remote.origin.url

	i = init

	l  = log
	ll = log --pretty='tformat:[%C(yellow)%h%C(reset)] [%C(blue)%aI%C(reset)] [%C(red)%cn%C(reset)] %C(cyan)::%C(reset) %s'

	m = merge

	pl  = pull
	plm = "!plm() { git f; git com; git plp; git s; }; plm"
	plp = pull --prune
	plu = "!plu() { git f; git com; git up; }; plu"

	ps   = push
	psvo = push --verbose origin

	pr = !bash -c 'stash pull-request $0 $@'

	prune = fetch --all --prune

	r  = reset
	rh = reset --hard HEAD

	s = status

	sm   = submodule
	smf  = submodule foreach --recursive
	smp  = submodule update  --recursive --init
	smup = "!smup() { git f; git up; git smf 'BAR=\"=---------------------------------------------=\"; echo \"${BAR}\"; git plu; echo \"${BAR}\\n\\n\"'; }; smup"

	undo = checkout --

	up = pull --rebase --prune


# vim: set syntax=gitconfig filetype=gitconfig ts=2 sw=2 tw=0 noet :
